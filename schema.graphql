type troveStatus @entity {
  id: ID!
  borrower: Bytes!
  created: BigInt!
  tokens: [Bytes!]!
  amounts: [BigInt!]!
  realAmounts: [BigDecimal!]!
  values: [BigDecimal!]!
  totalValues: [BigDecimal!]!
  timestamps: [BigInt!]
}

type updatedTrove @entity {
  id: ID!
  borrower: Bytes!
  operation: String!

  debt: BigInt!
  isDebtIncrease: Boolean!
  YUSDchange: BigInt!

  tokens: [Bytes!]!
  amounts: [BigInt!]!
  realAmounts: [BigDecimal!]!
  values: [BigDecimal!]!

  collsIn: [Bytes!]!
  amountsIn: [BigInt!]!
  realAmountsIn: [BigDecimal!]!
  valuesIn: [BigDecimal!]!

  collsOut: [Bytes!]!
  amountsOut: [BigInt!]!
  realAmountsOut: [BigDecimal!]!
  valuesOut: [BigDecimal!]!
  
  valueChange: BigDecimal!
  totalValue: BigDecimal!
  currentICR: BigInt!
  interest: BigInt!

  maxSlippages: [BigInt!]!
  upperHint: Bytes!
  lowerHint: Bytes!
  maxFeePercentage: BigInt!

  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!

}

type YUSDPaid @entity {
  id: ID!
  borrower: Bytes!
  fee: BigInt!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type VariablePaid @entity {
  id: ID!
  borrower: Bytes!
  fee: BigInt!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type totalStake @entity {
  id: ID!
  token: Bytes!
  newTotalStakes: BigInt!
}

type newLiquidation @entity {
  id: ID!
  liquidatedAmount: BigInt!
  totalYUSDGasCompensation: BigInt!
  totalCollTokens: [Bytes!]!
  totalCollAmounts: [BigInt!]!
  totalCollGasCompTokens: [Bytes!]!
  totalCollGasCompAmounts: [BigInt!]!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type newRedemption @entity {
  id: ID!
  borrower: Bytes!
  attemptedYUSDAmount: BigInt!
  actualYUSDAmount: BigInt!
  YUSDPaid: BigInt!
  tokens: [Bytes!]!
  amounts: [BigInt!]!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type farmOperation @entity {
  id: ID!
  user: Bytes!
  boostedPartition: BigInt!
  amountOfLP: BigInt!
  rewardRate: BigInt!
  userFactor: BigInt!
  sumOfFactors: BigInt!
  amount: BigInt!
  operation: String!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type collateral @entity {
  id: ID!
  address: Bytes!
  status: String!
  safetyRatio: BigInt!
  recoveryRatio: BigInt!
  oracle: Bytes!
  decimals: BigInt!
  feeCurve: Bytes!
  isWrapped: Boolean!
  routerAddress: Bytes!
  underlyingAddress: Bytes!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type tvl @entity {
  id: ID!
  collateral: Bytes!
  amounts: [BigInt!]!
  amount: BigInt!
  prices: [BigInt!]!
  values: [BigInt!]!
  value: BigInt!
  transactions: [Bytes!]!
  timestamps: [BigInt!]!
  blockNums: [BigInt!]!
}

type global @entity {
  id: ID!
  collaterals: [Bytes!]!
  amounts: [BigInt!]
  prices: [BigInt!]
  values: [BigInt!]
  timestamp: BigInt!
  timestamps: [BigInt!]!
  blockNum: BigInt!
  loaded: Boolean!
  temp: BigInt!
}

type sanctionedAddress @entity {
  id: ID!
  address: Bytes!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}

type interestApplied @entity {
  id: ID!
  borrower: Bytes!
  totalInterest: BigInt!
  transaction: Bytes!
  timestamp: BigInt!
  blockNum: BigInt!
}